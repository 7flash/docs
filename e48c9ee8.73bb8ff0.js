(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{148:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return l}));var r=n(2),o=n(6),a=(n(0),n(163)),i={title:"Listen to new blocks"},s={unversionedId:"api/examples/promise/listen-to-blocks",id:"api/examples/promise/listen-to-blocks",isDocsHomePage:!1,title:"Listen to new blocks",description:"This example shows how to subscribe to new blocks.",source:"@site/docs/api/examples/promise/listen-to-blocks.md",slug:"/api/examples/promise/listen-to-blocks",permalink:"/docs/api/examples/promise/listen-to-blocks",editUrl:"https://github.com/polkadot-js/docs/edit/master/docs/api/examples/promise/listen-to-blocks.md",version:"current",sidebar:"reference",previous:{title:"Simple Connect",permalink:"/docs/api/examples/promise/simple-connect"},next:{title:"Listen to balance changes",permalink:"/docs/api/examples/promise/listen-to-balance-change"}},c=[],p={rightToc:c};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.a)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.a)("p",null,"This example shows how to subscribe to new blocks."),Object(a.a)("p",null,"It displays the block number every time a new block is seen by the node you are connected to."),Object(a.a)("p",null,"NOTE: The example runs until you stop it with CTRL+C"),Object(a.a)("pre",null,Object(a.a)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"// Import the API\nconst { ApiPromise } = require('@polkadot/api');\n\nasync function main () {\n  // Here we don't pass the (optional) provider, connecting directly to the default\n  // node/port, i.e. `ws://127.0.0.1:9944`. Await for the isReady promise to ensure\n  // the API has connected to the node and completed the initialisation process\n  const api = await ApiPromise.create();\n\n  // We only display a couple, then unsubscribe\n  let count = 0;\n\n  // Subscribe to the new headers on-chain. The callback is fired when new headers\n  // are found, the call itself returns a promise with a subscription that can be\n  // used to unsubscribe from the newHead subscription\n  const unsubscribe = await api.rpc.chain.subscribeNewHeads((header) => {\n    console.log(`Chain is at block: #${header.number}`);\n\n    if (++count === 256) {\n      unsubscribe();\n      process.exit(0);\n    }\n  });\n}\n\nmain().catch(console.error);\n")))}l.isMDXComponent=!0},163:function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),l=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=l(n),m=r,d=b["".concat(i,".").concat(m)]||b[m]||u[m]||a;return n?o.a.createElement(d,s(s({ref:t},p),{},{components:n})):o.a.createElement(d,s({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);